1. In python file adventure.py line 37 I change the raw_input function into the input function, as in python 3 there's no raw_input function but only input() function.

2. As we can see, in adventure.py line 13 to line 17 and line 19 to line 40, the author defines functions(of baudout() and loop()) for later use in the program and to improve readability. From line 27 to 34 and line 42 to 46 the author uses 'if' condition statement for selectin alternatives under different conditions. From line 14 to 17 and line 36 to 40 the author uses looping statements of 'for' loop and 'while' loop for repeatment of processes and make the codes more briefly.

3. The author has used some meaningful names as in game.py line 21 to 37, and we can guess from these names for example, that dwarves_killed means the number dwarves the player has killed in the game, dwarf_stage determines the activeness of a dwarf and is_dead means whether the player is currently dead etc, and in game.py line 376 function "say_okay_and_finish" could mean to give an "okay" message and finish the game etc. However as in adventure.py line 13 and line 19 the author has used some unclear names as functions of "baudout" and "loop", and in game.py line 962 and line 969 function names as "t_say" and "i_unlock" can be really confusing.

4. Some functions used in the code do only one thing and some functions do more than one thing. As in game.py line 57-58 the function only generates a random number and in line 60-61 the function only generates a sequence randomly. However in game.py line 153 to 186 we can see that the function "move_to" not only move the player to a location, but also create variables and see if the location must allow the move or there's dwarf blocking the way, which can both be done by defining and calling other functions.

5. For example in game.py line 1567-1580(line 1577-1579) the function is originally designed to return an Adventure game saved to the given file, but it also reinstates the random number generator and delete the random state of the game. Also in game.py line 1544-1561(1554-1555) the function also deletes the random generator. These are both examples that may cause side effects to the program and may be carefully used when running the program. Also we can see that in play.py line 18 and line 30 the functions use the "global" statment which may also cause a side effect in the program as they change the original value of the variable "_game".

6. In game.py line 1275-1278, 1281-1284 and  1287-1290 all contain codes like "self.write_message()" "self.axe.drop(self.loc)" "self.do_motion(self.vocabulary['null'])" under some conditions. Maybe these lines of codes can be replaced by some kind of functions to simplify the codes.

7. The program uses exception handling in adventure.py line 42-46 "except EOFError". When testing the program, try command like "$ python -m unittest discover add"(where "add" are just some filename that you have never saved before), the testing would give an error showing that it cannot trace back the file.

8. There are classes which have resposibility over more than one piece of functionality, as in game.py line 19 to 1713 which includes the all process of the game that is too much of a class. It has taken on too many responsibilities like starting the game, moving the player and giving default messages etc.

9. Not all of the classes are cohesive. For example in game.py line 19-1713, the huge class Game(Data) contains large number of attributes and not every method manipulates many of them and each method just deals with some certain attributes, thus this class is not very cohesive as a whole and may be better breaked down into smaller classes. Also in data.py line 24-36, the class Data(object) has a function with many variables and the other one just uses one variable from it(self.objects) which indicates that this class is also not very cohesive.

10. The author both uses comments after a # and public APIs after defining a function in """ . The author uses some comments after a variable or a line of codes to clarify his purposes(game.py line 43 to 51) and also uses long comments before some functions to explain the meaning of those functions(game.py line 148 to 151). Good comments are public APIs as in game.py line 64 and line 73, which are added after defining a function to clarify the purposes, and explanation of intent as in game.py line 148 to 151, and also some warnings of consequences as in game.py line 218 to 222. Bad comments examples are some unclear comments as in adventure.py line 15, which may be caused by unmeaningful names, and some redundant comments as in game.py line 193, line 198 and line 202 etc. Also we can see that in data.py line 218 there's a weird comment as it looks like a line of code and has no power of explanation.

11. For example in data.py line 59 to line 194, related functions(each of them is dealing with a section) are kept close together which can improve readability. Another example of vertical formatting is in adventure.py line 13 to line 40, where related functions are also kept close as the second one loop() calls the first one baudout(s) in its lines.

12. The tests all passed. To consider whether the tests meet the F.I.R.S.T criteria, firstly for Fast, we can see that the tests do run fast when testing. Using command "$ python -m unittest discover" to run all the tests and the running time is around 4.88 s. For Independent, we can run each test independently using commands like "$ python -m unittest discover -s ./tests -p "test_commands.py" and "$ python -m unittest discover -s ./tests -p "test_data.py", and the tests can be run on any order. For Repeatable, I tried the test commands repeatedly for many times and it was repeatable(however we have no information whether it can be run repeatably in the production or development environment). For Self-validating, the tests all passed(turned out as "OK"). For Timely, as we have no information about whether the tests were written during code development or after the program was completed, we don't know whether the tests have met with this criteria.
